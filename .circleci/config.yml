defaults: &defaults
  docker:
    - image: circleci/node:9.4.0
  working_directory: ~/stencil-boilerplate

build_filters: &build_filters
  filters:
    branches:
      only:
        - master

version: 2
jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - save_cache:
          key: repo-cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/stencil-boilerplate
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Installing dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  lint:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - repo-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Linting
          command: npm run lint

#  test:
#    <<: *defaults
#    steps:
#      - restore_cache:
#          keys:
#            - repo-cache-{{ .Environment.CIRCLE_SHA1 }}
#      - restore_cache:
#          keys:
#            - dependency-cache-{{ checksum "package.json" }}
#      - run:
#          name: Testing
#          command: npm run test

  build:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - repo-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Creating Build
          command: 'npm run build'
          environment:
              - NODE_ENV: production
      - save_cache:
          key: build-cache-{{ checksum "package.json" }}
          paths:
            - www

  deploy:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - repo-cache-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
      - restore_cache:
          keys:
            - build-cache-{{ checksum "package.json" }}
      - run:
          name: Install rsync
          command: 'sudo apt install rsync'
      - run:
          name: Deploy
          command: 'rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ~stencil-boilerplate/www $DEPLOY_USERNAME@$DEPLOY_HOSTNAME:$DEPLOY_PATH'

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - dependencies
      - lint:
          requires:
            - dependencies
#      - test:
#          requires:
#            - dependencies
      - build:
          <<: *build_filters
          requires:
            - dependencies
      - deploy:
          <<: *build_filters
          requires:
            - lint
#            - test
            - build
